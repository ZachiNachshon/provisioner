name: General Availability - Promote RC to PyPI

on:
  workflow_dispatch:
    inputs:
      rc_version:
        type: string
        description: 'Release Candidate version to promote (e.g., 1.2.3-RC.1). Leave empty to auto-select latest RC.'
        required: false
      project_name:
        type: choice
        description: 'Select project to promote to GA'
        options: 
          - 'provisioner'
        required: true

env:
  PYPI_API_TOKEN_PROVISIONER_RUNTIME: ${{ secrets.PROVISIONER_PYPI_API_TOKEN }}
  PYPI_API_TOKEN_PROVISIONER_SHARED: ${{ secrets.PYPI_API_TOKEN_PROVISIONER_SHARED }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  POETRY_VERSION: "2.1.3"
  
jobs:
  promote_rc_to_ga:
    name: Promote RC to General Availability
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ '3.11' ]

    steps:
      - name: Checkout repository code (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Git submodules
          token: ${{ secrets.PROVISIONER_PLUGINS_REPO_ACCESS_TOKEN }}

      - name: Setup Environment
        uses: ./.github/actions/setup
        env:
          PYTHON_VERSION: ${{ matrix.python }}
          POETRY_VERSION: ${{ env.POETRY_VERSION }}

      - name: Promote Provisioner RC to GA
        id: promote_ga
        uses: ./.github/actions/promote-ga
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          rc_version: ${{ github.event.inputs.rc_version }}
          projects: |
            [
              {
                "project_path": "${{ github.event.inputs.project_name }}",
                "is_plugin": false,
                "github_repo": "ZachiNachshon/provisioner"
              }
            ]

      - name: Publish Provisioner Packages to PyPI
        uses: ./.github/actions/publish-pypi
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source_tag: v${{ steps.promote_ga.outputs.stable_version }}
          packages: |
            [
              {
                "project_path": "provisioner",
                "pypi_token": "${{ env.PYPI_API_TOKEN_PROVISIONER_RUNTIME }}",
                "is_plugin": false
              },
              {
                "project_path": "provisioner_shared",
                "pypi_token": "${{ env.PYPI_API_TOKEN_PROVISIONER_SHARED }}",
                "is_plugin": false
              }
            ] 