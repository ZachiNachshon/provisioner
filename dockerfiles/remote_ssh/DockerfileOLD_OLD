# INSTRUCTIONS:
# 
# Build the image:
#   docker build -t provisioner-remote-ssh-e2e -f provisioner_shared/components/runtime/test_lib/docker/remote_ssh/Dockerfile .
# 
# Run the container:
#   docker run -v ~/.ssh:/root/.ssh -p 2222:22 -d -it --name "z-provisioner-remote-ssh-e2e" "provisioner-remote-ssh-e2e"
# 
# SSH into the container as a remote machine:
#   ssh pi@localhost -p 2222
# 
# Use Debian as base image
# FROM arm64v8/debian:stable

# Install dependencies required for pyenv and Python builds
# RUN apt-get update && apt-get install -y \
#     openssh-server sudo curl wget systemd \
#     build-essential libssl-dev zlib1g-dev \
#     libbz2-dev libreadline-dev libsqlite3-dev \
#     libncursesw5-dev xz-utils tk-dev libxml2-dev \
#     libxmlsec1-dev libffi-dev liblzma-dev \
#     git \
#     && apt-get clean

# # Install locales package and generate en_US.UTF-8
# RUN apt-get update && apt-get install -y locales \
#     && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
#     && locale-gen en_US.UTF-8 \
#     && dpkg-reconfigure --frontend=noninteractive locales \
#     && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

# # Set environment variables for locale
# ENV LANG en_US.UTF-8
# ENV LC_ALL en_US.UTF-8

# # Create the 'pi' user and set password
# RUN useradd -m -s /bin/bash pi && echo 'pi:raspberry' | chpasswd

# # Allow 'pi' user to use sudo without password
# RUN usermod -aG sudo pi && echo 'pi ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/pi

# # Switch to 'pi' user for pyenv installation
# USER pi
# WORKDIR /home/pi

# # Install pyenv for the pi user
# RUN curl https://pyenv.run | bash

# # Configure pyenv in .bashrc and .profile
# RUN echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc \
#     && echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc \
#     && echo 'eval "$(pyenv init --path)"' >> ~/.bashrc \
#     && echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.bashrc \
#     && echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.profile \
#     && echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.profile \
#     && echo 'eval "$(pyenv init --path)"' >> ~/.profile

# # Install Python 3.11 via pyenv in a login shell
# RUN exec bash -l -c "pyenv install 3.11.6 && pyenv global 3.11.6"

# # Ensure pip is up to date
# RUN exec bash -l -c "python3 -m ensurepip && python3 -m pip install --upgrade pip"

# USER root

# # Set up SSH
# RUN mkdir /var/run/sshd && echo 'pi:raspberry' | chpasswd

# RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# # Expose SSH port
# EXPOSE 22

# # USER pi

# # Start SSHD
# CMD ["/usr/sbin/sshd", "-D"]











# # Set up SSH
# USER root

# # Generate missing host keys for SSH server
# RUN ssh-keygen -A

# # Create SSH directory for root and set appropriate permissions
# RUN mkdir -p /root/.ssh && \
#     chmod 700 /root/.ssh

# # Configure SSH daemon to allow root login with password authentication
# RUN echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && \
#     echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config

# RUN mkdir /var/run/sshd && echo 'pi:raspberry' | chpasswd
# RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# EXPOSE 22
# CMD ["/usr/sbin/sshd", "-D"]



FROM arm64v8/debian:stable

# Update package lists and install prerequisites
RUN apt-get update && apt-get install -y \
    software-properties-common

# Install Raspbian-like environment
RUN apt-get update && apt-get install -y \
    openssh-server sudo curl wget systemd \
    python3.11 python3.11-venv python3.11-dev python3-pip \
    ansible \
    && apt-get clean

# RUN python3.11 -m ensurepip --default-pip 
# RUN python3.11 -m pip install --upgrade pip

# Create the 'pi' user and set password
RUN useradd -m -s /bin/bash pi && echo 'pi:raspberry' | chpasswd

# Allow 'pi' user to use sudo without password
RUN usermod -aG sudo pi && echo 'pi ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/pi

# Create a dedicated 'admin' user for administrative tasks
RUN useradd -m -s /bin/bash admin && echo 'admin:admin' | chpasswd

# Allow 'admin' user to use sudo
RUN usermod -aG sudo admin && echo 'admin ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/admin

# Set up SSH
RUN mkdir /var/run/sshd && echo 'pi:raspberry' | chpasswd

RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# Expose SSH port
EXPOSE 22

# Update the default python3 symbolic link to python3.11
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Adjust permissions for 'pi' to install Python packages globally for Python 3.11
RUN mkdir -p /usr/local/lib/python3.11/dist-packages && \
    chown -R pi:pi /usr/local/lib/python3.11

# Start SSHD
CMD ["/usr/sbin/sshd", "-D"]