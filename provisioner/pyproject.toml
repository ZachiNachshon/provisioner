[tool.poetry]
name = "provisioner_runtime"
version = "0.1.2"
description = "Provision Everything Anywhere"
authors = ["Zachi Nachshon <zachi.nachshon@gmail.com>"]

# Until multi-project is supported natively with Poetry, use a plugins that bundles
# declared dependencies within the parent project. In this case we'll have to exclude
# Poetry package related files from being part of the tar.gz
# https://github.com/DavidVujic/poetry-multiproject-plugin
exclude = [
    "**/.venv",
    "**/*_test*", 
    "**/*_fake*", 
    "**/dist*", 
    "**/htmlcov", 
    "**/poetry.lock", 
    "**/pytest", 
    "**/Makefile", 
    "**/runners", 
    "**/.gitignore",
    "**/.coverage",
    "**/.coveragerc",
    "**/.git-deps",
    "**/.pytest_cache"]

packages = [
    { include = "provisioner" },
    { include = "external/ansible_playbooks" },
]

# A list of patterns that will be included in the final package.
# If no format is specified, it will default to include both sdist and wheel
# i.e. { path = "tests", format = ["sdist", "wheel"] }
include = [
    # Must be boundled for referencing Ansible playbooks
    { path = "external/ansible_playbooks" },
    { path = "provisioner/runner/ansible/resources/ansible.cfg" },
]

[tool.poetry.scripts]
provisioner = "provisioner.main:main"
# rpi_diagrams = "rpi.os.diagrams.install_diag:main"

[tool.black]
line-length = 120

[tool.ruff]
exclude = [".venv", "external", ".git-deps"]
line-length = 120
ignore = [ "E501", "E402", "F403", "F405" ]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    # isort
    "I",
    # Whitespaces
    "W", 
]

[tool.mypy]
exclude = ["external"]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = false # Generates an error if a component of a type becomes Any because mypy couldnâ€™t resolve an import
warn_return_any = false # Generates an error if you return a value with an Any type in a function that is annotated to return a non-Any value
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true

[tool.poetry.dependencies]
python = "^3.10"
typer = ">=0.6.1,<0.13.0"
loguru = ">=0.6,<0.8"
requests = "^2.28.1"
rich = ">=12.5.1,<14.0.0"
python3-nmap = "^1.5.4"
python-libnmap = "^0.7.3"
PyYAML = "^6.0"
inquirer = ">=2.10,<4.0"
python-hosts = "^1.0.3"
ansible = ">=7.3,<10.0"
ansible-runner = "^2.3.2"
# GitPython = "^3.1.18" # - GitPython provides object model access to your git repository (https://github.com/gitpython-developers/GitPython)
# Jinja2 = "^3.0.3"      - Templating engine (https://github.com/pallets/jinja)
# sh = "^1.14.2"         - Subprocess replacement for Python (https://github.com/amoffat/sh)
# backoff = "^1.10.0"    - Function decoration for backoff and retry (https://github.com/litl/backoff)
# tenacity = "^8.0.1"    - General-purpose retrying library (https://github.com/jd/tenacity)

[tool.poetry.dev-dependencies]
black = "^24.3.0"
pytest = "^7.1.3"
mypy = "^1.9"
coverage = "^7.4.4"
diagrams = "^0.23.4"
ruff = "^0.3.7"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
